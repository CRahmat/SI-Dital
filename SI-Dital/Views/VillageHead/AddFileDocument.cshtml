@model SI_Dital.ViewModels.FileDocuments
@{
    ViewBag.Title = "AddCitizen";
    Layout = "~/Views/Shared/_LayoutVillageHead.cshtml";

}

<div class="row page-titles">
    <div class="col-md-6 col-8 align-self-center">
        <h3 class="text-themecolor m-b-0 m-t-0">Dokumen</h3>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="@Url.Action("FileDocument")">File Dokumen</a></li>
            <li class="breadcrumb-item active">Tambah File Dokumen</li>
        </ol>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                @using (Html.BeginForm("AddFileDocument", "VillageHead", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label" })
                        <input type="file" class="form-control" id="File" name="File" />
                        @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NameXPosition, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NameXPosition, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.NameXPosition, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.NameYPosition, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.NameYPosition, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.NameYPosition, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.QRXPosition, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.QRXPosition, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.QRXPosition, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.QRYPosition, htmlAttributes: new { @class = "control-label", type = "number" })
                        @Html.EditorFor(model => model.QRYPosition, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.QRXPosition, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FontSize, htmlAttributes: new { @class = "control-label", type = "number" })
                        @Html.EditorFor(model => model.FontSize, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FontSize, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                        @Html.EnumDropDownListFor(model => model.Status, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="">
                            <button type="submit" class="btn btn-success"> <i class="fa fa-save"></i> Simpan</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

